generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  sentMessages     Message[]  @relation("SentMessages")
  receivedMessages Message[]  @relation("ReceivedMessages")
  assignedTasks    Task[]     @relation("AssignedTasks")
  activityLogs     ActivityLog[]
}

model Client {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  phone     String?
  projects  Project[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Project {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  status      String
  clientId    String   @db.ObjectId
  client      Client   @relation(fields: [clientId], references: [id])
  tasks       Task[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  fromId    String   @db.ObjectId
  toId      String   @db.ObjectId
  from      User     @relation("SentMessages", fields: [fromId], references: [id])
  to        User     @relation("ReceivedMessages", fields: [toId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  status      String
  projectId   String   @db.ObjectId
  project     Project  @relation(fields: [projectId], references: [id])
  assignedTo  String?  @db.ObjectId
  assignee    User?    @relation("AssignedTasks", fields: [assignedTo], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ActivityLog {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  type      String   // 'visit', 'message', 'task'
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  details   Json?
  createdAt DateTime @default(now())
} 