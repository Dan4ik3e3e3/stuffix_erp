'use client';

import { useState } from 'react';
import Link from 'next/link';
import { useSession } from 'next-auth/react';
import { useRouter } from 'next/navigation';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
const Sidebar = () => {
  const menuItems = [
    { name: '–î–∞—à–±–æ—Ä–¥', icon: 'üìä', path: '/dashboard' },
    { name: '–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏', icon: 'üë•', path: '/dashboard/employees' },
    { name: '–ü—Ä–æ–µ–∫—Ç—ã', icon: 'üìÅ', path: '/dashboard/projects' },
    { name: '–ó–∞–¥–∞—á–∏', icon: '‚úì', path: '/dashboard/tasks' },
    { name: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å', icon: 'üìÖ', path: '/dashboard/calendar' },
    { name: '–û—Ç—á–µ—Ç—ã', icon: 'üìà', path: '/dashboard/reports' },
    { name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', icon: '‚öôÔ∏è', path: '/dashboard/settings' },
  ];

  return (
    <div className="w-64 bg-gray-800 text-white h-screen fixed left-0 top-0">
      <div className="p-4">
        <h1 className="text-2xl font-bold mb-8">Stuffix ERP</h1>
        <nav>
          {menuItems.map((item) => (
            <Link
              key={item.path}
              href={item.path}
              className="flex items-center space-x-2 p-2 hover:bg-gray-700 rounded-lg mb-2"
            >
              <span>{item.icon}</span>
              <span>{item.name}</span>
            </Link>
          ))}
        </nav>
      </div>
    </div>
  );
};

const Header = () => {
  return (
    <header className="bg-white shadow-md fixed top-0 left-64 right-0 h-16 flex items-center justify-between px-6">
      <div className="flex items-center space-x-4">
        <h2 className="text-xl font-semibold">–î–∞—à–±–æ—Ä–¥</h2>
      </div>
      <div className="flex items-center space-x-4">
        <button className="p-2 hover:bg-gray-100 rounded-full">üîî</button>
        <button className="p-2 hover:bg-gray-100 rounded-full">üë§</button>
      </div>
    </header>
  );
};

export default function Dashboard() {
  const { data: session, status } = useSession();
  const router = useRouter();
  const [currentDate] = useState(new Date().toLocaleDateString('ru-RU'));

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
  if (status === 'loading') {
    return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  }

  if (status === 'unauthenticated') {
    router.push('/');
    return null;
  }

  const metrics = [
    { title: '–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã', value: '12', change: '+2' },
    { title: '–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏', value: '48', change: '+5' },
    { title: '–ó–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', value: '23', change: '-3' },
    { title: '–í—ã–ø–æ–ª–Ω–µ–Ω–æ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ', value: '156', change: '+12' },
  ];

  const recentActivities = [
    { text: '–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ CRM"', time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥' },
    { text: '–ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: "–î–∏–∑–∞–π–Ω –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"', time: '4 —á–∞—Å–∞ –Ω–∞–∑–∞–¥' },
    { text: '–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫: –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', time: '6 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥' },
  ];

  const upcomingEvents = [
    { title: '–í—Å—Ç—Ä–µ—á–∞ –∫–æ–º–∞–Ω–¥—ã', date: '15:00 —Å–µ–≥–æ–¥–Ω—è' },
    { title: '–î–µ–¥–ª–∞–π–Ω –ø—Ä–æ–µ–∫—Ç–∞ UI/UX', date: '–ó–∞–≤—Ç—Ä–∞' },
    { title: '–†–µ–≤—å—é –∫–æ–¥–∞', date: '16 –º–∞—Ä—Ç–∞' },
  ];

  return (
    <div className="min-h-screen bg-gray-100">
      <Sidebar />
      <Header />
      
      <main className="ml-64 pt-16 p-8">
        <div className="mb-8">
          <h1 className="text-3xl font-bold mb-2">–î–∞—à–±–æ—Ä–¥</h1>
          <p className="text-gray-600">{currentDate}</p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          {metrics.map((metric, index) => (
            <div key={index} className="bg-white p-6 rounded-lg shadow-md">
              <h3 className="text-gray-600 mb-2">{metric.title}</h3>
              <div className="flex items-center justify-between">
                <span className="text-2xl font-bold">{metric.value}</span>
                <span className={`text-sm ${metric.change.startsWith('+') ? 'text-green-500' : 'text-red-500'}`}>
                  {metric.change}
                </span>
              </div>
            </div>
          ))}
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <div className="bg-white p-6 rounded-lg shadow-md">
            <h2 className="text-xl font-bold mb-4">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h2>
            <div className="space-y-4">
              {recentActivities.map((activity, index) => (
                <div key={index} className="flex justify-between items-center">
                  <p>{activity.text}</p>
                  <span className="text-sm text-gray-500">{activity.time}</span>
                </div>
              ))}
            </div>
          </div>

          <div className="bg-white p-6 rounded-lg shadow-md">
            <h2 className="text-xl font-bold mb-4">–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è</h2>
            <div className="space-y-4">
              {upcomingEvents.map((event, index) => (
                <div key={index} className="flex justify-between items-center">
                  <p>{event.title}</p>
                  <span className="text-sm text-gray-500">{event.date}</span>
                </div>
              ))}
            </div>
          </div>
        </div>
      </main>
    </div>
  );
} 